{"version":3,"file":"ng2-charts.mjs","sources":["../../../projects/ng2-charts/src/lib/theme.service.ts","../../../projects/ng2-charts/src/lib/base-chart.directive.ts","../../../projects/ng2-charts/src/lib/base-colors.ts","../../../projects/ng2-charts/src/lib/get-colors.ts","../../../projects/ng2-charts/src/lib/ng-charts.module.ts","../../../projects/ng2-charts/src/public_api.ts","../../../projects/ng2-charts/src/ng2-charts.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { ChartConfiguration, ChartOptions } from 'chart.js';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  private pColorschemesOptions?: ChartOptions;\n  public colorschemesOptions: BehaviorSubject<ChartOptions | undefined> = new BehaviorSubject<ChartOptions | undefined>(undefined);\n\n  constructor() {\n  }\n\n  setColorschemesOptions(options: ChartConfiguration['options']): void {\n    this.pColorschemesOptions = options;\n    this.colorschemesOptions.next(options);\n  }\n\n  getColorschemesOptions(): ChartConfiguration['options'] {\n    return this.pColorschemesOptions;\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { Chart, ChartConfiguration, ChartEvent, ChartType, DefaultDataPoint } from 'chart.js';\n\nimport { ThemeService } from './theme.service';\nimport { Subscription } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\nimport { merge } from 'lodash-es';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: 'canvas[baseChart]',\n  exportAs: 'base-chart',\n})\nexport class BaseChartDirective<TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown> implements OnDestroy, OnChanges {\n\n  @Input() public type: ChartConfiguration<TType, TData, TLabel>['type'] = 'bar' as TType;\n  @Input() public legend?: boolean;\n  @Input() public data?: ChartConfiguration<TType, TData, TLabel>['data'];\n  @Input() public options?: ChartConfiguration<TType, TData, TLabel>['options'];\n  @Input() public plugins?: ChartConfiguration<TType, TData, TLabel>['plugins'] = [];\n\n  @Input() public labels?: ChartConfiguration<TType, TData, TLabel>['data']['labels'];\n  @Input() public datasets?: ChartConfiguration<TType, TData, TLabel>['data']['datasets'];\n\n  @Output() public chartClick: EventEmitter<{ event?: ChartEvent, active?: {}[] }> = new EventEmitter();\n  @Output() public chartHover: EventEmitter<{ event: ChartEvent, active: {}[] }> = new EventEmitter();\n\n  public ctx: string;\n  public chart?: Chart<TType, TData, TLabel>;\n\n  private subs: Subscription[] = [];\n  private themeOverrides: ChartConfiguration['options'];\n\n  public constructor(private element: ElementRef, private zone: NgZone, private themeService: ThemeService) {\n    this.ctx = element.nativeElement.getContext('2d');\n    this.subs.push(this.themeService.colorschemesOptions\n      .pipe(distinctUntilChanged())\n      .subscribe(r => this.themeChanged(r)));\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const requireRender = [ 'type' ];\n    const propertyNames = Object.getOwnPropertyNames(changes);\n\n    if (propertyNames.some(key => requireRender.includes(key)) ||\n      propertyNames.every(key => changes[key].isFirstChange())\n    ) {\n      this.render();\n    } else {\n      const config = this.getChartConfiguration();\n\n      if (this.chart) {\n        Object.assign(this.chart.config.data, config.data);\n        Object.assign(this.chart.config.plugins, config.plugins);\n        Object.assign(this.chart.config.options, config.options);\n      }\n\n      this.update();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    if (this.chart) {\n      this.chart.destroy();\n      this.chart = void 0;\n    }\n    this.subs.forEach(s => s.unsubscribe());\n  }\n\n  public render(): Chart<TType, TData, TLabel> {\n    if (this.chart) {\n      this.chart.destroy();\n    }\n\n    return this.zone.runOutsideAngular(() => this.chart = new Chart(this.ctx, this.getChartConfiguration()));\n  }\n\n  public update(duration?: any): void {\n    if (this.chart) {\n      this.zone.runOutsideAngular(() => this.chart?.update(duration));\n    }\n  }\n\n  public hideDataset(index: number, hidden: boolean): void {\n    if (this.chart) {\n      this.chart.getDatasetMeta(index).hidden = hidden;\n      this.update();\n    }\n  }\n\n  public isDatasetHidden(index: number): boolean | undefined {\n    return this.chart?.getDatasetMeta(index)?.hidden;\n  }\n\n  public toBase64Image(): string | undefined {\n    return this.chart?.toBase64Image();\n  }\n\n  private themeChanged(options: ChartConfiguration['options']): void {\n    this.themeOverrides = options;\n    if (this.chart) {\n      Object.assign(this.chart.config.options, this.getChartOptions());\n\n      this.update();\n    }\n  }\n\n  private getChartOptions(): ChartConfiguration<TType, TData, TLabel>['options'] {\n    return merge({\n        onHover: (event: ChartEvent, active: {}[]) => {\n          if (this.chartHover.observed && active && !active.length) {\n            return;\n          }\n\n          this.zone.run(() => this.chartHover.emit({ event, active }));\n        },\n        onClick: (event?: ChartEvent, active?: {}[]) => {\n          if(!this.chartClick.observed){\n            return;\n          }\n\n          this.zone.run(() => this.chartClick.emit({ event, active }));\n        }\n      },\n      this.themeOverrides,\n      this.options,\n      {\n        plugins: {\n          legend: {\n            display: this.legend\n          }\n        }\n      });\n  }\n\n  private getChartConfiguration(): ChartConfiguration<TType, TData, TLabel> {\n    return {\n      type: this.type,\n      data: this.getChartData(),\n      plugins: this.plugins,\n      options: this.getChartOptions()\n    };\n  }\n\n  private getChartData(): ChartConfiguration<TType, TData, TLabel>['data'] {\n    return this.data ? this.data : {\n      labels: this.labels || [],\n      datasets: this.datasets || []\n    }\n  }\n}\n","export const baseColors: Array<number[]> = [\n  [255, 99, 132],\n  [54, 162, 235],\n  [255, 206, 86],\n  [231, 233, 237],\n  [75, 192, 192],\n  [151, 187, 205],\n  [220, 220, 220],\n  [247, 70, 74],\n  [70, 191, 189],\n  [253, 180, 92],\n  [148, 159, 177],\n  [77, 83, 96]\n];\n","import { baseColors } from './base-colors';\nimport { Color } from 'chart.js';\n\nexport const builtInDefaults = {\n  datasets: {\n    line: {\n      backgroundColor: (context: any) => rgba(generateColor(context.datasetIndex), 0.4),\n      borderColor: (context: any) => rgba(generateColor(context.datasetIndex), 1),\n      pointBackgroundColor: (context: any) => rgba(generateColor(context.datasetIndex), 1),\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: (context: any) => rgba(generateColor(context.datasetIndex), 0.8)\n    },\n    bar: {\n      backgroundColor: (context: any) => rgba(generateColor(context.datasetIndex), 0.6),\n      borderColor: (context: any) => rgba(generateColor(context.datasetIndex), 1),\n      hoverBackgroundColor: (context: any) => rgba(generateColor(context.datasetIndex), 0.8),\n      hoverBorderColor: (context: any) => rgba(generateColor(context.datasetIndex), 1)\n    },\n    get radar(): {[key: string]: ((context: any) => Color) | Color } {\n      return this.line;\n    },\n    doughnut: {\n      backgroundColor: (context: any) => rgba(generateColor(context.dataIndex), 0.6),\n      borderColor: '#fff',\n      hoverBackgroundColor: (context: any) => rgba(generateColor(context.dataIndex), 1),\n      hoverBorderColor: (context: any) => rgba(generateColor(context.dataIndex), 1)\n    },\n    get pie(): {[key: string]: ((context: any) => Color) | Color } {\n      return this.doughnut;\n    },\n    polarArea: {\n      backgroundColor: (context: any) => rgba(generateColor(context.dataIndex), 0.6),\n      borderColor: (context: any) => rgba(generateColor(context.dataIndex), 1),\n      hoverBackgroundColor: (context: any) => rgba(generateColor(context.dataIndex), 0.8),\n      hoverBorderColor: (context: any) => rgba(generateColor(context.dataIndex), 1)\n    },\n    get bubble(): {[key: string]: ((context: any) => Color) | Color } {\n      return this.doughnut;\n    },\n    get scatter(): {[key: string]: ((context: any) => Color) | Color } {\n      return this.doughnut;\n    },\n    get area(): {[key: string]: ((context: any) => Color) | Color } {\n      return this.polarArea;\n    }\n  }\n};\n\nfunction rgba(colour: Array<number>, alpha: number): Color {\n  return 'rgba(' + colour.concat(alpha).join(',') + ')';\n}\n\nfunction getRandomInt(min: number, max: number): number {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction getRandomColor(): number[] {\n  return [ getRandomInt(0, 255), getRandomInt(0, 255), getRandomInt(0, 255) ];\n}\n\n/**\n * Generate colors\n */\nfunction generateColor(index = 0): number[] {\n  return baseColors[index] || getRandomColor();\n}\n","import { Injectable, ModuleWithProviders, NgModule, Optional } from '@angular/core';\nimport { BaseChartDirective } from './base-chart.directive';\nimport {\n  ArcElement,\n  BarController,\n  BarElement,\n  BubbleController,\n  CategoryScale,\n  Chart,\n  ChartComponentLike,\n  Defaults,\n  defaults,\n  DoughnutController,\n  Filler,\n  Legend,\n  LinearScale,\n  LineController,\n  LineElement,\n  PieController,\n  PointElement,\n  PolarAreaController,\n  RadarController,\n  RadialLinearScale,\n  ScatterController,\n  TimeSeriesScale,\n  Title,\n  Tooltip\n} from 'chart.js';\nimport { merge } from \"lodash-es\";\nimport { builtInDefaults } from \"./get-colors\";\n\nChart.register(\n  Title, Tooltip, Filler, Legend,\n  LineController, LineElement, PointElement, LinearScale, CategoryScale,\n  BarController, BarElement,\n  DoughnutController, ArcElement,\n  RadarController, RadialLinearScale,\n  PieController,\n  PolarAreaController,\n  BubbleController,\n  ScatterController,\n  TimeSeriesScale);\n\n@Injectable({ providedIn: 'root' })\nexport class NgChartsConfiguration {\n  public plugins?: ChartComponentLike[];\n  public defaults?: Partial<Defaults>;\n}\n\n@NgModule({\n  imports: [],\n  declarations: [ BaseChartDirective ],\n  exports: [ BaseChartDirective ]\n})\nexport class NgChartsModule {\n\n  constructor(@Optional() config?: NgChartsConfiguration) {\n    if (config?.plugins)\n      Chart.register(...config?.plugins);\n\n    const ngChartsDefaults = merge(builtInDefaults, config?.defaults || {});\n\n    defaults.set(ngChartsDefaults);\n  }\n\n  public static forRoot(config?: NgChartsConfiguration): ModuleWithProviders<NgChartsModule> {\n    return {\n      ngModule: NgChartsModule,\n      providers: [\n        { provide: NgChartsConfiguration, useValue: config }\n      ]\n    };\n  }\n}\n","/*\n * Public API Surface of ng2-charts\n */\n\nexport * from './lib/ng-charts.module';\nexport * from './lib/base-chart.directive';\nexport * from './lib/theme.service';\nexport * from './lib/base-colors';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}